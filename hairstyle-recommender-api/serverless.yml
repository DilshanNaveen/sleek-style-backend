org: dilshaniit
app: sleek-style
service: hairstyle-recommender
frameworkVersion: '3'

package:
  exclude:
    - node_modules/**
    - venv/**

plugins:
  - serverless-iam-roles-per-function
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'npm'
    includeModules: true

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    S3_BUCKET_HAIRSTYLE_SUGGESTIONS: ${param:S3_BUCKET_HAIRSTYLE_SUGGESTIONS}
    S3_BUCKET_USER_DATA: ${param:S3_BUCKET_USER_DATA}
    DYNAMODB_TABLE_USER_DATA: ${param:DYNAMODB_TABLE_USER_DATA}
    FACE_SHAPE_PREDICTOR_API: ${param:FACE_SHAPE_PREDICTOR_API}
  logRetentionInDays: 1
  apiGateway:
    shouldStartNameWithService: true

functions:
  save-user-data:
    handler: saveUserData.post
    events:
      - http:
          path: /save-user-data
          method: post
    iamRoleStatementsName: ${self:app}-${self:service}-save-user-data
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "s3:PutObject"
          - "s3:GetObject"
        Resource: 
          Fn::Join: ["", [ "arn:aws:s3:::", "${param:S3_BUCKET_USER_DATA}/*" ]]
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource: 
          Fn::Join: [ "", [ "arn:aws:dynamodb:", { Ref: "AWS::Region" }, ':', { Ref: "AWS::AccountId" }, ":table/${param:DYNAMODB_TABLE_USER_DATA}" ] ]
  
  get-hairstyle-suggestions:
    handler: getHairstyleSuggestions.get
    timeout: 30
    events:
      - http:
          path: /get-hairstyle-suggestions
          method: get
    iamRoleStatementsName: ${self:app}-${self:service}-get-hairstyle-suggestions
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "s3:PutObject"
          - "s3:GetObject"
        Resource: 
          Fn::Join: ["", [ "arn:aws:s3:::", "${param:S3_BUCKET_USER_DATA}/*" ]]
      - Effect: "Allow"
        Action:
          - "s3:*"
        Resource: 
          Fn::Join: ["", [ "arn:aws:s3:::", "${param:S3_BUCKET_HAIRSTYLE_SUGGESTIONS}" ]]
      - Effect: "Allow"
        Action:
          - "s3:*"
        Resource: 
          Fn::Join: ["", [ "arn:aws:s3:::", "${param:S3_BUCKET_HAIRSTYLE_SUGGESTIONS}/*" ]]
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
          - dynamodb:Query
        Resource: 
          Fn::Join: [ "", [ "arn:aws:dynamodb:", { Ref: "AWS::Region" }, ':', { Ref: "AWS::AccountId" }, ":table/${param:DYNAMODB_TABLE_USER_DATA}" ] ]

  get-status:
    handler: getStatus.get
    timeout: 30
    events:
      - http:
          path: /get-status
          method: get
    iamRoleStatementsName: ${self:app}-${self:service}-get-status
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:GetItem
        Resource: 
          Fn::Join: [ "", [ "arn:aws:dynamodb:", { Ref: "AWS::Region" }, ':', { Ref: "AWS::AccountId" }, ":table/${param:DYNAMODB_TABLE_USER_DATA}" ] ]